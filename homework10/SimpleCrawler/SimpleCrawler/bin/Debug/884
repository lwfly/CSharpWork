<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta property="og:description" content="不管是C/C&#x2B;&#x2B;技术栈，还是PHP，Java技术栈，从事后端开发的朋友对 nginx 一定不会陌生。 想要深入学习nginx，阅读源码一定是非常重要的一环，但nginx源码量毕竟还是不算少，一不小心就" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>震撼！全网第一张源码分析全景图揭秘Nginx - 轩辕之风 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Z9Vw4btcgJmrpUEjY_SgebmTmDXJ_hPFoST7ad2aJp4" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=hlpQ1CJDwwJXDxv2HNauUmW3NjyWzoMaw1uER19SLT0" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/xuanyuan/custom.css?v=1KFqgc8N4u9cFrFdaEZzuOblzkw=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xuanyuan/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xuanyuan/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xuanyuan/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 193695;
        var currentBlogApp = 'xuanyuan';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/xuanyuan/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xuanyuan/">轩辕之风</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xuanyuan/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%BD%A9%E8%BE%95%E4%B9%8B%E9%A3%8E">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/xuanyuan/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
42&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
220</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/xuanyuan/p/12710715.html">震撼！全网第一张源码分析全景图揭秘Nginx</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <p>不管是C/C++技术栈，还是PHP，Java技术栈，从事后端开发的朋友对<strong>nginx</strong>一定不会陌生。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/88278e0f-2176-4b3a-8208-620f194e5d9a.png" alt=""></p>
<p>想要深入学习nginx，阅读源码一定是非常重要的一环，但nginx源码量毕竟还是不算少，一不小心就容易陷入某个细节，迷失在茫茫码海之中。</p>
<p>如果有一张地图，让我们开启上帝视角，总览全局，帮助我们快速学习整体框架结构，又能不至于迷失其中那就再好不过了！</p>
<p>看到这篇文章的你有福了，笔者花了不少时间，把这件事给做了，先来看个全貌（限于平台图片尺寸设定，这里只能看个大概，想获取高清大图请看文末）：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/adeaa888-11e4-4d95-a1a4-33da738be773.png" alt=""></p>
<p>下面选取一些关键部分来一窥神秘的nginx。</p>
<h2 id="主进程启动">主进程启动</h2>
<p>nginx主进程启动后，进行一系列的初始化，包括但不限于：</p>
<ul>
<li>命令行参数解析</li>
<li>时间初始化</li>
<li>日志初始化</li>
<li>ssl初始化</li>
<li>操作系统相关初始化</li>
<li>一致性hash表初始化</li>
<li>模块编号处理</li>
</ul>
<p><img src="https://imgkr.cn-bj.ufileos.com/fdeef53d-03b2-4a1e-a9de-8b02cbb2313a.png" alt=""></p>
<h2 id="核心初始化">核心初始化</h2>
<p>另外一个最重要的初始化由<code>ngx_init_cycle()</code>函数完成，该函数围绕nginx中非常核心的一个全局数据结构<code>ngx_cycle_t</code>展开。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/d37a68f2-654d-48ce-82db-8a089c9f6ced.png" alt=""></p>
<p>该函数完成了几个核心初始化：</p>
<ul>
<li>配置文件解析</li>
<li>创建并监听socket</li>
<li>初始化nginx各模块</li>
</ul>
<p><img src="https://imgkr.cn-bj.ufileos.com/87a9e677-4529-4562-9dc1-c4b98a632931.png" alt=""></p>
<h2 id="nginx核心模块群">nginx核心模块群</h2>
<p>nginx是一个模块化设计的软件，优秀的架构设计使得nginx可以扩展非常多的模块。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/464087fb-f4da-46e8-930e-8df605cc82d7.png" alt=""></p>
<p>要一一描绘出这些模块显得有些杂乱和工作量巨大，仅选取一些关键核心模块进行了展示：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/2102914e-6781-4bb4-bd43-58529765aa54.png" alt=""></p>
<p>每个模块有一个支持的命令解析列表，在初始化过程中，主进程将会遍历所有模块的命令列表，进行配置文件中的命令解析，如经常用的<code>ngx_http_proxy_module</code>:</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/d7ff5489-dbaf-4671-afd3-2367ad2e0813.png" alt=""></p>
<p><code>ngx_http_core_module</code>模块：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/de129a2e-d6a5-4e65-94e6-c99691257a13.png" alt=""></p>
<p>main函数的最后，根据是否启用多进程模型，分别进入多进程版本的<code>ngx_master_process_cycle</code>和单进程版本的<code>ngx_single_process_cycle()</code>。</p>
<p>以常见的多进程版本为例，进入该函数后，首先设置进程名称为：<strong>&quot;master process&quot;</strong>，随后启动各工作子进程。</p>
<p>启动子进程<br>
经过几层封装，最终通过<code>fork</code>启动多个子进程：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/c6c10af5-50d0-4d68-abc8-0893e6a9ffda.png" alt=""></p>
<p>除了工作子进程，还启动了缓存管理进程。</p>
<p>之后主进程进入工作循环，周期性更新时间并检查各全局标记，根据不同情况给子进程发送不同信号。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/6ecb68b0-9514-420a-9274-b0212fe76013.png" alt=""></p>
<h2 id="子进程工作循环">子进程工作循环</h2>
<p>子进程启动后，进入<code>ngx_worker_process_cycle</code>，进行一些工作进程的初始化，随后修改进程名称为：<strong>&quot;worker process&quot;</strong>。</p>
<p>接着进入工作循环函数<code>ngx_process_events_and_timers</code>，在该函数中主要负责：</p>
<ul>
<li>竞争互斥锁，拿到锁的进程才能执行accept接受新的连接，以此在多进程之间解决惊群效应</li>
<li>通过epoll异步IO模型处理网络IO事件，包括新的连接事件和已建立连接发生的读写事件</li>
<li>处理定时器队列中到期的定时器事件，定时器通过红黑树的方式存储</li>
</ul>
<p><img src="https://imgkr.cn-bj.ufileos.com/aa84e43c-180b-4252-9503-1c466b017e6f.png" alt=""></p>
<h2 id="http请求预处理">HTTP请求预处理</h2>
<p>当连接有数据产生时，工作线程读取socket中到来的数据，并根据HTTP协议格式进行解析，最终封装成ngx_request_t请求对象，提交处理。</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/2f144fb7-b94a-4a80-b524-efdae734579b.png" alt=""></p>
<h2 id="http请求处理的11个阶段">HTTP请求处理的11个阶段</h2>
<p>在nginx中各HTTP模块是以挂载的形式串接而成，以流水线工作模式进行HTTP请求的处理，nginx将一个HTTP请求的处理划分为11个阶段。</p>
<pre><code class="language-cpp">typedef enum {
    NGX_HTTP_POST_READ_PHASE = 0,
    NGX_HTTP_SERVER_REWRITE_PHASE,
    NGX_HTTP_FIND_CONFIG_PHASE,
    NGX_HTTP_REWRITE_PHASE,
    NGX_HTTP_POST_REWRITE_PHASE,
    NGX_HTTP_PREACCESS_PHASE,
    NGX_HTTP_ACCESS_PHASE,
    NGX_HTTP_POST_ACCESS_PHASE,
    NGX_HTTP_PRECONTENT_PHASE,
    NGX_HTTP_CONTENT_PHASE,
    NGX_HTTP_LOG_PHASE
} ngx_http_phases;
</code></pre>
<p>每阶段（部分阶段保留，不允许挂载）允许多个模块挂载，一个模块也可以挂载到多个阶段。因此，初次完成挂载的存储结构是一个二维数组的形式。</p>
<p>不过在初始化过程中，<code>ngx_http_init_phase_handlers</code>函数将该二维数组转换成了一维数组。下图是nginx中各模块挂载情况：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/47189f1c-a1ae-4c05-90bb-446326fb384a.png" alt=""></p>
<h2 id="全景图">全景图</h2>
<p>最后，再来看一看全貌：</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/adeaa888-11e4-4d95-a1a4-33da738be773.png" alt=""></p>
<h2 id="总结">总结</h2>
<p>nginx不仅是一款优秀的高性能web服务器，对于C/C++技术栈的同学来说，还是一个很好的学习对象，其良好的架构设计，优美的代码风格和经典的编程技法无一不值得细细品来。</p>
<p>不过限于笔者水平和时间有限，虽然号称全景图，但依然无法覆盖到nginx的方方面面，欢迎读者朋友留言交流，让此图日渐完善，谢谢大家。</p>
<p><code>获取完整高清大图，可在公众号里回复“nginx”自动获取。</code></p>
<h2 id="往期热门回顾">往期热门回顾</h2>
<p><a href="https://mp.weixin.qq.com/s/kcd7co6hS7j-RFSOiL-qYA">一个Java对象的回忆录：那些被锁住的日子</a></p>
<p><a href="https://mp.weixin.qq.com/s/gZPxqZzY2rnngxvvzexWTw">一个整数＋1引发的灾难</a></p>
<p><a href="https://mp.weixin.qq.com/s/V7wBdl-5W4ehTAnACQFjGQ">一网打尽！每个程序猿都该了解的黑客技术大汇总</a></p>
<p><a href="https://mp.weixin.qq.com/s/Bb2ugXYPR6r11QaGKbNBSw">看过无数Java GC文章，这5个问题你也未必知道！</a></p>
<p><a href="https://mp.weixin.qq.com/s/BEYQF305cWAOIwK2DtvyfQ">Python一键转Jar包，Java调用Python新姿势！</a></p>
<p><a href="https://mp.weixin.qq.com/s/xp2S4_3UQTZ0TOIlVqM8uw">一个Java对象的回忆录：垃圾回收</a></p>
<p><a href="https://mp.weixin.qq.com/s/WkQ5mVZrF7V2GrU-rsPOdQ">内核地址空间大冒险3：权限管理</a></p>
<p><a href="https://mp.weixin.qq.com/s/lxpHhHVIh6DktoHzrRLaKA">谁动了你的HTTPS流量？</a></p>
<p><a href="https://mp.weixin.qq.com/s/7gM31s4-hTJTprJnxsHgEA">路由器里的广告秘密</a></p>
<p><a href="https://mp.weixin.qq.com/s/0b5e1_vwyvw8WOOHbVcQyQ">内核地址空间大冒险2：中断与异常</a></p>
<p><a href="https://mp.weixin.qq.com/s/JTr1-5nPtseAYXfvJdamVg">DDoS攻击：无限战争</a></p>
<p><a href="https://mp.weixin.qq.com/s/lerhjpAEdp4RiwsmetyqPg">一条SQL注入引出的惊天大案</a></p>
<p><a href="https://mp.weixin.qq.com/s/esc9gWg42vyPkT58HCKNgg">内核地址空间大冒险：系统调用</a></p>
<p><a href="https://mp.weixin.qq.com/s/suzicCzb2g5b8NN71S5Ngw">一个HTTP数据包的奇幻之旅</a></p>
<p><a href="https://mp.weixin.qq.com/s/_TOFIPGIeMHhVxIVToxmiQ">一个DNS数据包的惊险之旅</a></p>
<p><a href="https://mp.weixin.qq.com/s/-ggUa3aWkjjHjr9VwQL9TQ">我是一个流氓软件线程</a></p>
<h3 id="扫码关注，更多精彩"><center>扫码关注，更多精彩</center></h3>
<hr>
<p><img src="https://imgkr.cn-bj.ufileos.com/5de7751a-9e38-4718-994a-6136f7804ae5.png" alt=""></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-16 09:56</span>&nbsp;
<a href="https://www.cnblogs.com/xuanyuan/">轩辕之风</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12710715" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12710715);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 193695, cb_blogApp = 'xuanyuan', cb_blogUserGuid = '8508cac9-f21a-e411-8d02-90b11c0b17d6';
    var cb_entryId = 12710715, cb_entryCreatedDate = '2020-04-16 09:56', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 轩辕之风
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>