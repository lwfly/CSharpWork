<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="jvm运行原理的一篇0基础的入门介绍,对java的运行机制有一个简单的了解" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>[零] Java 语言运行原理 JVM原理浅析 入门了解简介 Java语言组成部分 javap命令使用 - noteless - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=BKtyzabbeYJEVOaELkxmRjHbp7LT-v37GzrU5S24bJk" />
    <link id="MainCss" rel="stylesheet" href="/skins/buildtowin/bundle-buildtowin.min.css?v=lp23bZd4RUCf9TGsihJRLSq5M_182P4N8YRMn1A2CWo" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/noteless/custom.css?v=fnk17ixpiOajP7an/OE6hUwN1aI=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/buildtowin/bundle-buildtowin-mobile.min.css?v=ADiCwO2hOTdd5yYidcx7eob7ix2VJI4o_TXjEycTHjs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/noteless/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/noteless/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/noteless/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=wKnarAbt-YO5waLYR80IqCLKpzPpF-s-32JKmKCtJxg"></script>
    <script>
        var currentBlogId = 268100;
        var currentBlogApp = 'noteless';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'BuildtoWin';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <link rel="stylesheet" href="https://blog-static.cnblogs.com/files/noteless/cnblogs.css" type="text/css" />

<!--
<link rel="stylesheet" href="https://blog-static.cnblogs.com/files/noteless/monokai-sublime.css">
-->

<script src="https://blog-static.cnblogs.com/files/noteless/highlight.pack.js" defer></script>






<div class="main-top">

  <a class="avatar" href="https://www.cnblogs.com/noteless">
    <img src="//files.cnblogs.com/files/noteless/cnblogspic2.gif" alt="noteless 头像">
</a>
<div class="title">
    <a class="name" href="https://www.cnblogs.com/noteless/">noteless</a>
  </div>
<div class="info">

  </div>
</div>



<a href="#"><div id="toTop" style="zoom:0;display:none"></div></a>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/noteless/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/noteless/">noteless</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/noteless/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/noteless">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/noteless/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
212&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
89</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/noteless/p/9510252.html">[零] Java 语言运行原理 JVM原理浅析 入门了解简介 Java语言组成部分 javap命令使用</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        jvm运行原理的一篇0基础的入门介绍,对java的运行机制有一个简单的了解
    </div>
<div id="cnblogs_post_body" class="blogpost-body ">
    <div style="line-height: 200%;"><span style="font-size: 15px;"><strong style="font-size: 1.17em;">Java Virtual Machine&nbsp; 官方介绍</strong></span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong><br /></strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">Java虚拟机规范官方文档
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">https://docs.oracle.com/javase/specs/index.html
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">其中以java8的为
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">https://docs.oracle.com/javase/specs/jvms/se8/html/index.html
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">看下官方的介绍的一节
</span></div>
<div style="line-height: 200%;">
<table style="border-width: 2px 1px; border-style: solid; border-color: gray; border-image: none; width: 70%; line-height: 200%; margin-left: 0px; border-collapse: collapse; -ms-word-break: break-all; empty-cells: show; background-color: transparent;">
<tbody style="line-height: 200%;">
<tr style="line-height: 200%;">
<td style="padding: 4px; border: 1px solid gray; border-image: none; line-height: 200%;"><span style="font-size: 15px;">&nbsp;<strong>The Java Virtual Machine</strong></span><br /><span style="font-size: 15px;">Java虚拟机是Java平台的基石。是java实现硬件和操作系统的独立性(也就是无关性)，生成极小体积的编译代码,以及保护用户免受恶意程序攻击的的关键技术组成部分。</span><br /><br /><span style="font-size: 15px;">Java虚拟机是一种抽象计算机器。像真正的计算机一样，它有一个指令集以及在运行时各种内存区域。</span><br /><span style="font-size: 15px;">使用虚拟机实现编程语言是相当普遍的;</span><br /><span style="font-size: 15px;">最著名的虚拟机可能是 P-Code machine of UCSD Pascal.</span><br /><br /><span style="font-size: 15px;">Java虚拟机的第一个原型实现是在Sun Microsystems inc.完成的，它在手持设备上仿真实现了Java虚拟机指令集，该设备类似于现在的个人数字助理（PDA）。Oracle现在已经将许多java虚拟机实现应用于 移动设备 pc 服务器等领域，但是Java虚拟机不局限于任何特定的实现技术、主机硬件或主机操作系统。也不局限于特定的代码执行方式,虽然不强求使用解释器来执行程序,但是也可以通过将它的指令集编译成一个实际的CPU来实现。它也可以在微代码microcode实现，也可以直接在CPU中实现。</span><br /><br /><span style="font-size: 15px;">Java虚拟机对Java编程语言一无所知，只知道一种特定的二进制格式，class文件格式。一个class文件包含Java虚拟机指令集（或者称之为字节码bytecode）和符号表，以及其他辅助信息。</span><br /><br />
<div style="line-height: 200%;"><span style="font-size: 15px;">基于安全方面的考虑，Java虚拟机在class文件中施加了许多强制性的语法和结构化约束，凡是能用class文件正确表达出来的编程语言，都可以放在Java虚拟机里面执行。由于它是一个通用的、机器无关的执行平台，所以其他语言的实现者都可以考虑将Java虚拟机作为那些语言的交付媒介。
					</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>




				</td>




			</tr>




		</tbody>




	</table>




</div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<h3 style="line-height: 200%;"><span style="font-size: 15px;"><strong>java的组成部分</strong>
</span></h3>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;">
<ul style="line-height: 200%;">
<li style="line-height: 200%;"><span style="font-size: 15px;">Java语言规范
		</span></li>
<li style="line-height: 200%;"><span style="font-size: 15px;">Java 应用程序编程接口 API
		</span></li>
<li style="line-height: 200%;"><span style="font-size: 15px;">Java class文件格式规范
		</span></li>
<li style="line-height: 200%;"><span style="font-size: 15px;">Java虚拟机
		</span></li>




	</ul>




</div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong><br /></strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>java语言规范</strong>
</span></div>
<div style="line-height: 200%;">
<div style="line-height: 200%;"><span style="font-size: 15px;">java语言规范决定了你要怎么书写你的源代码
	</span></div>




</div>
<div style="line-height: 200%;"><span style="font-size: 15px;">也就是java的语法句法词法结构组成,数据类型长度等,对于java语言本身的描述
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">比如主函数需要时public static void main(String[] args){ 为什么使用public而不是common表示公用?这就是java语言规范的作用
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>java应用程序编程接口</strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">Java应用程序API 也就是java设计者提供的基本的功能方法,比如访系统资源&nbsp; </span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">API之主要目的是提供应用程序与开发人员以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">提供API所定义的功能的软件称作此API的实现。API是一种接口，故而是一种抽象。
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">应用程序接口为："电脑操作系统（Operating system）&rsquo;或&lsquo;程序库&rsquo;提供给应用程序调用使用的代码
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">其实所有的功能也都是依赖操作系统本身的,比如读取文件,获取文件的属性
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">如果一个操作系统,本身就没有网络通信的功能,你是不可能在上面完成网络通信程序的开发的
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>Java class文件格式规范</strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">编译后被Java虚拟机执行的一种二进制文件格式
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">这是一种统一的明确的格式 一般以文件的形式存储
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">其实就是java虚拟机的"机器语言"
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>Java虚拟机</strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">读取class文件,解析class文件并执行,实际运行java的机器
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">一种抽象化的计算机，通过在实际的计算机上仿真模拟各种计算机功能来实现的。
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">编写任何一个程序你都会用到这四个技术领域
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong><br /></strong>
</span></div>
<h3 style="line-height: 200%;"><span style="font-size: 15px;"><strong>无关与相关的辩证关系</strong>
</span></h3>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">JVM是平台相关的,不同的平台有不同的虚拟机
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">但是她在不同的平台上提供统一一致的JVM虚拟指令集,对具体的平台进行抽象封装
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">不管运行在何种平台,他们提供一致性的操作与访问形式
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">从JVM本身的平台相关性,转变成为JAVA语言的平台无关性
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">class文件是源代码编译后的&nbsp; 平台无关的&nbsp; 二进制文件格式,
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">不依赖于特定的硬件与操作系统表示形式
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">是JVM可以识别执行的语言,相当于JVM的机器语言
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">也就是说,不管何种语言,如果一旦能够编译成为符合规范的class文件格式
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">就能够被JVM进行执行! 这就相当于实现了语言无关性
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">可以说,java设计者的野心很大, class文件 与JVM的结合,语言无关加上平台无关
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><a href="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111145944-693227315.png"><img style="display: inline; background-image: none;" title="image_5b7b8260_172f" src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111147027-418515960.png" alt="image_5b7b8260_172f" width="582" height="458" border="0" /></a>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<h3 style="line-height: 200%;"><span style="font-size: 15px;"><strong>java语言实现与运行原理</strong>
</span></h3>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong><br /></strong>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">再回头看下java技术体系,可以很清晰的看得出来
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">java的语言实现与运行原理
</span></div>
<div style="line-height: 200%;">
<div style="line-height: 200%;"><span style="font-size: 15px;">Java语言规范 和 Java 应用程序编程接口 API 提供了使用Java语言<strong>解决问题的方式</strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">Java class文件格式规范 和Java虚拟机 则约定了<strong>Java的运行原理</strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong><br /></strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">class文件是对源代码的编译,不仅仅具有语言无关性的好处
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">源代码是以对人友好的方式,class文件是机器友好的,通过对原始文件进行特殊的处理与转换,能够提高运行的性能,将一部分工作前置
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">class文件既然是对于源代码的转换描述
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">自然是会涉及到java中的各种数据类型,方法调用,常量等等的描述与表示
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">JVM既然是解析class文件进行解析执行,自然是需要解析class文件,并且能够读取验证文件的格式以及语法格式,然后进行装载运行
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>所以说想要了解Java的运行原理</strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">最基本的两个部分就是class文件的结构组成以及JVM的运行区域内存的管理
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">Java语法中所有的一切都要能够表示出来
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">比如数据类型 引用类型还是基本类型 字段属性 方法 公有私有 静态 非静态 如何表示描述
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">以及必要的信息,比如当前对象的this等等
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">某种程度上来说 class文件就是源代码针对于java虚拟机的"注解版" ,将你知道的语法表示出来
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">然后还有潜在的隐藏的信息,比如父类信息等
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">对于一个已经定义好的class文件,JVM需要进行一系列严格的验证
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">因为一个class文件可能不是由一个标准的编译器生成的也可能被别人恶意篡改过
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">所以JVM必须验证
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">验证之后还需要进行装载把数据信息装载到内存中,然后进行初始化等等
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">这就是JVM涉及到的部分
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">所以说想要弄明白java的运行原理需要了解清楚class文件的结构以及JVM的运行内存划分
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<h3 style="line-height: 200%;"><span style="font-size: 15px;"><strong>使用javap查看编译后的文件</strong>
	</span></h3>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>源代码</strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><a href="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111147924-1404138516.png"><img style="display: inline; background-image: none;" title="image_5b7b8260_4d62" src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111148863-146142579.png" alt="image_5b7b8260_4d62" width="434" height="365" border="0" /></a>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><strong>javap -v HelloWolrd.class&nbsp; 查看</strong>
	</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><img src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111521177-1275773286.png" alt="" /></span>
<p><span style="font-size: 15px;">&nbsp;</span></p>

</div>




</div>
<div style="line-height: 200%;"><span style="font-size: 15px;">上图中的信息不必较真,我也是随便标注了个别比较好辨别的点
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">但是你完全可以发现
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">class文件对于源文件的完整表述,类信息,字段信息 方法信息 涉及到的常量与其他类的调用等等
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">class文件是一张巨大的表
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">信息是单独存放的,可以把行号#XXX 理解成地址,
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">如下图所示,从头不断地根据地址信息串联起来,知道最终的叶子数据信息,形成一张巨大的信息表
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><a href="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111152952-155420097.png"><img style="display: inline; background-image: none;" title="image_5b7b8260_50dc" src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111153921-1391968987.png" alt="image_5b7b8260_50dc" width="432" height="150" border="0" /></a>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">比如
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><a href="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111155910-1479955460.png"><img style="display: inline; background-image: none;" title="image_5b7b8260_36cd" src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111157937-1688127821.png" alt="image_5b7b8260_36cd" width="546" height="45" border="0" /></a>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><img src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111338860-990974327.png" alt="" /></span>
<p><span style="font-size: 15px;">&nbsp;</span></p>


</div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">再次重申,这些就相当于JVM的机器语言了,有数据,有指令,JVM要做的就是解析执行了
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">当然,是一项很复杂的工作
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">另外javap还有很多其他命令
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;"><a href="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111202865-1092455448.png"><img style="display: inline; background-image: none;" title="image_5b7b8260_7825" src="https://images2018.cnblogs.com/blog/897393/201808/897393-20180821111204891-707995005.png" alt="image_5b7b8260_7825" width="606" height="361" border="0" /></a>
</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
<div style="line-height: 200%;"><span style="font-size: 15px;">&nbsp;</span></div>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2018-08-21 11:12</span>&nbsp;
<a href="https://www.cnblogs.com/noteless/">noteless</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9510252" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(9510252);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 268100, cb_blogApp = 'noteless', cb_blogUserGuid = '2f3ff2be-bdda-e511-9fc1-ac853d9f53cc';
    var cb_entryId = 9510252, cb_entryCreatedDate = '2018-08-21 11:12', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 noteless
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script>
/*
$(document).ready(function() {
  $('pre').each(function(i, e) {hljs.highlightBlock(e)});
});
*/
</script>





<script>




//初始化加载函数
$(function(){
    // hideIndexArticle();
    appendNavigator();

    addOriginURL();

addSupport();
hideToTop();


})


//隐藏首页除置顶外的其他所有文章列表
function hideIndexArticle(){
    var windowURL = window.location.href;
    console.log(windowURL )
    if(windowURL && windowURL.indexOf('www.cnblogs.com/noteless')>0 && windowURL.indexOf('html')<0){
        //$('#mainContent .day:not(:first)').css('display','none');
    }
}

//增导航条上增加 目录索引按钮
function appendNavigator(){
    var _html='<li>'
        +'<a id="blog_nav_admin" class="menu" rel="nofollow" href="https://www.cnblogs.com/noteless/p/9400742.html">'
        +'目录索引'
        +'</a>'
        +'</li>';

    $('#navList').append(_html);
}

function appendMenuItem(tagName,id,content){
    console.log(tagName+" "+tagName.substring(1));
    var paddingLeft = tagName.substring(1) * 30; //添加标题缩进
    $('#menu_nav_ol').append('<li class="' + id +'" style="padding-left: '+ paddingLeft +'px;"><b>' + content + '</b></li>');
}


//添加支持一下，请求关注
function addSupport(){

var zhichiHml = '<p>'
+'<span>'
+'<img src="https://files-cdn.cnblogs.com/files/noteless/zhichiyixaa.bmp" alt="">'
+'</span>'
+'</p>';
$('#cnblogs_post_body').append(zhichiHml );

}

//每篇文章增加原文地址
function addOriginURL(){

    //文章增加原文地址
    var originURL='<div>'
        +'原文地址:'
        +'<a href="'
        +window.location.href
        +'" target="_blank">'
        +$('.postTitle a').html()
        +'</a>'
        +'</div>';
		
	originURL+='<img src="https://blog-static.cnblogs.com/files/noteless/%E4%BA%8C%E7%BB%B4%E7%A0%812.gif"></img>';
		
		
    if($("#cnblogs_post_body h3:first").length>0){
        $("#cnblogs_post_body h3:first").before(originURL);
    }else{
        $('#cnblogs_post_body').prepend(originURL);
    }


}

//如果是pc展示返回顶部
function hideToTop(){

	if(isPC()){
		$('#toTop').show();
	}
}


//判断手机还是pc
function isPC() {
   var userAgentInfo = navigator.userAgent;
   var Agents = ["Android", "iPhone",
      "SymbianOS", "Windows Phone",
      "iPad", "iPod"];
   var flag = true;
   for (var v = 0; v < Agents.length; v++) {
      if (userAgentInfo.indexOf(Agents[v]) > 0) {
         flag = false;
         break;
      }
   }
   return flag;
}



//根据标题生成左侧边栏的目录树
// 生成目录开始

$(function () {

	//如果是手机隐藏目录
	if(isPC()){

		//内容拼接
		$('body').append(
			'<div id="article-outline">'
			+'<div style="height:15px;">'
			+'<button type="button" class="close" data-dismiss="modal" aria-hidden="true">'
			+'X'
			+'</button>'
			+'</div>'
			+'</div>'
			+'<style>'
			+'#article-outline{'
			+'display:none;'
			+'min-width:140p;'
			+'max-width: 230px;'
			//+'max-height: 350px;'
			+'position:absolute;'
			+'float: left;'
			+'top:150px;'
			+'left:-999px;'
			+'border:1px solid #ccc;'
			+'box-shadow:5px 5px 2px #ccc;'
			+'padding: 5px 10px;'
			+'background-color: #fff;'
			+'overflow-y: auto;'
			+'scroll-x: auto;'
			+'}'

			+'#article-outline ul{'
			+'margin:5px 0 5px 0;'
			+'padding-left:30px;'
			+'font-size:12px;'
			+'border-left:1px dotted #ccc;'
			+'}'

			+'#article-outline ul:first-child{'
			+'padding-left:15px;'
			+'border:none;'
			+'}'

			+'#article-outline li{'
			+'list-style-type:decimal;'
			+'margin:3px 0;'
			+'}'

			+'#article-outline a{'
			+'color:#00C1E4;'
			+'}'
			+'</style>'
		)
		
		

		
		
		//取得新添加的目录元素
		var jOutline = $('#article-outline');

		//获取文章内容
		//var jContent = $('article .content');
		var jContent = $('div#topics');

		//计算高度
		var jContentHeight = jContent.height();

		//关闭按钮
		jOutline.find('.close').on('click', function () {
			jOutline.hide();
		})

		updateOutline();

		var top = jOutline.offset().top;
		scrollOutline();
		$(window).on('scroll', scrollOutline);

		function scrollOutline() {
			var scrollTop = $(document).scrollTop();
			var maxTop = jContent.offset().top + jContent.height() - jOutline.height();
			//设置行内样式
			if (scrollTop >= top && scrollTop <= maxTop) {
				jOutline.css({'position': 'fixed', 'top': 0});
			}
			else if (scrollTop < top) {
				/*
							jOutline.css({'position': 'absolute','float':'left', 'top': '150px'});
				*/
				jOutline.css({'position': 'absolute', 'top': '200px'});
			}
			else {
				/*
							jOutline.css({'position': 'absolute','float':'left', 'top': maxTop + 'px'});
				*/
				jOutline.css({'position': 'absolute', 'top': maxTop + 'px'});
			}

		}

		function updateOutline() {
			//设置哪些级别的目录
			// var arrAllHeader = jContent.find("h1,h2,h3,h4,h5,h6");
			var arrAllHeader = jContent.find("h2,h3,h4,h5,h6");
			var arrOutline = ['<ul>'];
			var header, headerText;
			var id = 0;
			var level = 0,
				lastLevel = 1;
			var levelCount = 0;
			for (var i = 0, c = arrAllHeader.length; i < c; i++) {
				header = arrAllHeader[i];
				headerText = $(header).text();

				header.setAttribute('id', id);

				level = header.tagName.match(/^h(\d)$/i)[1];
				levelCount = level - lastLevel;

				if (levelCount > 0) {
					for (var j = 0; j < levelCount; j++) {
						arrOutline.push('<ul>');
					}
				} else if (levelCount < 0) {
					levelCount *= -1;
					for (var j = 0; j < levelCount; j++) {
						arrOutline.push('</ul>');
					}
				}
				;
				arrOutline.push('<li>');
				arrOutline.push('<a href="#' + id + '">' + headerText + '</a>');
				arrOutline.push('</li>');
				lastLevel = level;
				id++;
			}
			arrOutline.push('</ul>')
			if (arrOutline.length > 2) {
				jOutline.append(arrOutline.join(''));
				jOutline.find('ul').each(function (i, n) {
					var jThis = $(this);
					if (jThis.children('li').length === 0) {
						jThis.replaceWith(jThis.children());
					}
				});
				showOutline();
			}
			else {
				hideOutline();
			}
		}

		function showOutline() {
			var offset = jContent.offset();

			//目录左侧偏移量
			/*        jOutline.css({
						left: offset.left + jContent.width() + 10 + 'px',
					}).show();*/
			jOutline.css({
				left:8 + 'px',
			}).show();
		}

		function hideOutline() {
			jOutline.hide();
		}
	
	
	}




    
});

//生成目录结束




</script>
    </div>
</body>
</html>