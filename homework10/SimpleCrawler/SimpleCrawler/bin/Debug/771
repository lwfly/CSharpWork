<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>随笔列表第2页 - tr1ple - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Z9Vw4btcgJmrpUEjY_SgebmTmDXJ_hPFoST7ad2aJp4" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/tr1ple/custom.css?v=ytmQtB1oUcves9yhWLSGzmDcOKw=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/tr1ple/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/tr1ple/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/tr1ple/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=98Fvfd6UZH20B_MF08daNaODjSu879MVR9RHmyvWAlg"></script>
    <script>
        var currentBlogId = 316934;
        var currentBlogApp = 'tr1ple';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleMemory';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/tr1ple/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/tr1ple/">tr1ple</a>
</h1>
<h2>
To make each day count. Make small but daily progress.
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/tr1ple/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/tr1ple">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/tr1ple/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
131&nbsp; </span>
<span id="stats_article_count">文章 - 
2&nbsp; </span>
<span id="stats-comment_count">评论 - 
18</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->


<div id="homepage_top_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/tr1ple/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=4">4</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=5">5</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=6">6</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=7">7</a>
    
    
    <a href="https://www.cnblogs.com/tr1ple/default.html?page=3">下一页</a>
</div>
</div>

		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/02/23.html">2020年2月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12348886.html">
    Fastjson &lt;=1.2.62 远程代码执行-漏洞复现
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：影响范围： Fastjson&lt;=1.2.62 需要开启autotype poc： String text1 = &quot;{\&quot;@type\&quot;:\&quot;org.apache.xbean.propertyeditor.JndiConverter\&quot;,\&quot;AsText\&quot;:\&quot;rmi://127.0.0.1:109            <a href="https://www.cnblogs.com/tr1ple/p/12348886.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-23 11:30 tr1ple 阅读 (1333) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12348886" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/02/22.html">2020年2月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12346535.html">
    Apache Tomcat Ajp CVE-2020-1938漏洞复现
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：环境搭建： sudo docker pull duonghuuphuc/tomcat-8.5.32 sudo docker run -d -it -p 8080:8080 -p 8009:8009 --name ghostcat duonghuuphuc/tomcat-8.5.32 tomcat调试            <a href="https://www.cnblogs.com/tr1ple/p/12346535.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-22 20:41 tr1ple 阅读 (344) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12346535" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/02/20.html">2020年2月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12335098.html">
    关于JDK高版本下RMI、LDAP+JNDI bypass的一点笔记  
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.关于RMI 只启用RMI服务时，这时候RMI客户端能够去打服务端，有两种情况，第一种就是利用服务端本地的gadget，具体要看服务端pom.xml文件 比如yso中yso工具中已经集合了很多gadget chain 本地利用yso的打rmi注册表的模块 java -cp .\ysoserial.            <a href="https://www.cnblogs.com/tr1ple/p/12335098.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-20 12:09 tr1ple 阅读 (461) 评论 (2)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12335098" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/02/06.html">2020年2月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12260662.html">
    javaweb-codereview 学习记录-5
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.关于URLConnection 应用程序利用url与远程通信的所有类的超类 jdk1.8中支持的协议包括以上这些，gopher在jdk8中取消了。 java中默认对(http|https)做了一些事情，比如: 默认启用了透明NTLM认证 默认跟随跳转 httpURLconnection可能jdk            <a href="https://www.cnblogs.com/tr1ple/p/12260662.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-06 20:07 tr1ple 阅读 (135) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12260662" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12260664.html">
    java 动态代理机制
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：代理模式是Java中常用的设计模式，主要由公共接口、被代理类和代理类等三部分组成，代理类持有被代理类的实类，代为执行具体的类方法。其中代理类与被代理类有同样的接口。 代理类的对象本身并不真正实现服务，而是通过调用被代理类对象的方法来提供特定的服务。 代理分为静态代理和动态代理，编译时能确定被代理的类            <a href="https://www.cnblogs.com/tr1ple/p/12260664.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-06 14:42 tr1ple 阅读 (50) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12260664" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/02/04.html">2020年2月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12258047.html">
    blackhat-New-Exploit-Technique-In-Java-Deserialization-Attack-笔记
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：java反序列化的攻击场景： 1.远程服务接收了不被信任的反序列化数据 2.classpath中存在序列化所需要的类 3.序列化的类中存在危险函数 从上面3点看出和以前看php的反序列化攻击场景从宏观上看差不多，首先是接收数据时反序列化了不被信任的序列化数据，php的当然是固定的unserializ            <a href="https://www.cnblogs.com/tr1ple/p/12258047.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-02-04 18:29 tr1ple 阅读 (68) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12258047" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/01/29.html">2020年1月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12230614.html">
    TODO list
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
该文被密码保护。    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-29 15:39 tr1ple 阅读 (12) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12230614" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/01/24.html">2020年1月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12232601.html">
    关于&lt;Java 中 RMI、JNDI、LDAP、JRMP、JMX、JMS那些事儿（上）&gt;看后的一些总结-2
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：关于JNDI： 命名系统是一组关联的上下文，而上下文是包含零个或多个绑定的对象，每个绑定都有一个原子名(实际上就是给绑定的对象起个名字，方便查找该绑定的对象)，&#160;使用JNDI的好处就是配置统一的管理接口，下层可以使用RMI、LDAP或者CORBA来访问目标服务 要获取初始上下文，需要使用初始上下文工            <a href="https://www.cnblogs.com/tr1ple/p/12232601.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-24 22:07 tr1ple 阅读 (282) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12232601" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/01/23.html">2020年1月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12231677.html">
    关于&lt;Java 中 RMI、JNDI、LDAP、JRMP、JMX、JMS那些事儿（上）&gt;看后的一些总结-1 
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：原文地址：https://www.anquanke.com/post/id/194384#h3-3 1.java rmi 关于rmi客户端和服务端通信的过程，java的方法都实现在rmi服务端，客户端实际上是通过访问rmi注册表拿到stub，然后再通过它调用服务端方法，那么调用方法时要传递参数，参数            <a href="https://www.cnblogs.com/tr1ple/p/12231677.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-23 23:25 tr1ple 阅读 (168) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12231677" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/01/22.html">2020年1月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12229915.html">
    javaweb-codereview 学习记录-4
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：反射java.lang.Runtime 之前在p牛的知识星球中也学过反射机制调用Runtime来执行命令时需要用getruntime来返回Runtime类的实例，因为Runtime类设计是单例模式，并且该类的构造方法是私有的，因此无法直接通过newinstance来实例化该类，因此除了通过getRu            <a href="https://www.cnblogs.com/tr1ple/p/12229915.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-22 23:42 tr1ple 阅读 (160) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12229915" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2020/01/16.html">2020年1月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12201553.html">
    从0到1掌握某Json-TemplatesImpl链与ysoserial-jdk7u21的前因后果
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文首发于先知社区： https://xz.aliyun.com/t/7096 前言 作为一名安全研究人员(java安全菜鸡)，知道拿到exp怎么打还不够，还得进一步分析exp构造原理与漏洞原理才行。本篇文章主要分析FastJson1.2.24中针对TemplatesImpl链的构造原理以及ysos            <a href="https://www.cnblogs.com/tr1ple/p/12201553.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-16 16:33 tr1ple 阅读 (279) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12201553" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/12/30.html">2019年12月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12121293.html">
    javaweb-codereview 学习记录-3
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Class类加载流程 实际上就是ClassLoader将会调用loadclass来尝试加载类，首先将会在jvm中尝试加载我们想要加载的类，如果jvm中没有的话，将调用自身的findclass，此时要是findclass重写了，并且传入了我们想要加载的类的字节码，那么应该调用defineclass在j            <a href="https://www.cnblogs.com/tr1ple/p/12121293.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-30 20:48 tr1ple 阅读 (68) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12121293" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/12/25.html">2019年12月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12094952.html">
    javaweb-codereview 学习记录-2
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.Java 文件名空字节截断漏洞(%00 Null Bytes) 受空字节截断影响的JDK版本范围:JDK&lt;1.7.40 实际上修复就是检查文件名中是否包含\u0000，包含则为非法路径 find usages看一下可以看到跟文件名相关的函数基本上都调用了此函数来进行校验，比如这里用java1.6            <a href="https://www.cnblogs.com/tr1ple/p/12094952.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-25 21:57 tr1ple 阅读 (67) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12094952" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12094006.html">
    javaweb-codereview 学习记录-1
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Servlet是在Java Web容器上运行的小程序,通常我们用Servlet来处理一些较为复杂的服务器端的业务逻辑。值得注意的是在Servlet3.0之后(Tomcat7+)可以使用注解方式配置Servlet了。 Servlet3.0之前的版本都需要在web.xml中配置，Servlet是两对标签            <a href="https://www.cnblogs.com/tr1ple/p/12094006.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-25 00:13 tr1ple 阅读 (89) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12094006" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/12/22.html">2019年12月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12074629.html">
    JAVA安全漫谈1-8笔记
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一.反射篇1 classloader就是java的类加载器，告诉虚拟机如何加载这个类。默认情况下根据类名来加载类，类名必须是完整路径 {}括号里的是初始化块，这里面的代码在创建java对象时执行，而且在构造器之前执行！其实初始化块就是构造器的补充，初始化快是不能接收任何参数的，定义的一些所有对象共有            <a href="https://www.cnblogs.com/tr1ple/p/12074629.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-22 00:03 tr1ple 阅读 (214) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12074629" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/12/16.html">2019年12月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12049920.html">
    Pwnhub Fantastic Key-一点总结
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：index.php config.php trick1： 源码里用到了PDO来进行sql查询，那么PDO有一个特性就是支持堆叠语句。那么堆叠语句就可以结合prepare进行堆叠注入，这里可以到后端的参数包括i和v，这里id参数肯定没法闭合，因为单引号过滤了，并且-和#也被过滤了，那么注释肯定也不可以            <a href="https://www.cnblogs.com/tr1ple/p/12049920.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-16 18:01 tr1ple 阅读 (112) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12049920" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/12/12.html">2019年12月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/12030970.html">
    一步一步学习FastJson1.2.47远程命令执行漏洞
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文首发于先知：https://xz.aliyun.com/t/6914 漏洞分析 FastJson1.2.24 RCE 在分析1.2.47的RCE之前先对FastJson1.2.24版本中的RCE进行一个简单的漏洞链分析，为在本篇文章后面1.2.47中漏洞的调用过程做个铺垫。在本文中的1.2.24            <a href="https://www.cnblogs.com/tr1ple/p/12030970.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-12-12 18:41 tr1ple 阅读 (600) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12030970" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/11/27.html">2019年11月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/11940133.html">
    D3ctf-web-复现分析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
该文被密码保护。    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-11-27 15:22 tr1ple 阅读 (5) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11940133" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/11/24.html">2019年11月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/11431543.html">
    fastjson 1.2.24反序列化导致任意命令执行漏洞分析记录
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：环境搭建： 漏洞影响版本： fastjson在1.2.24以及之前版本存在远程代码执行高危安全漏洞 环境地址： https://github.com/vulhub/vulhub/tree/master/fastjson/vuln 正常访问页面返回hello,world~ 此时抓包修改content-            <a href="https://www.cnblogs.com/tr1ple/p/11431543.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-11-24 20:50 tr1ple 阅读 (601) 评论 (2)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11431543" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/tr1ple/archive/2019/11/23.html">2019年11月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/tr1ple/p/11876441.html">
    PHP字符逃逸导致的对象注入
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.漏洞产生原因： 序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了serialize函数之后，要是放在序列化之前应该就不会产生这个问题 php特性： 以上代码就明显存在一个问题，即从序列化后的字符串中明显可以看到经过filter函数以后s:6对应的字符串明显变            <a href="https://www.cnblogs.com/tr1ple/p/11876441.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-11-23 14:07 tr1ple 阅读 (428) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11876441" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        

    </div>    
</div>


<div id="homepage_bottom_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/tr1ple/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=4">4</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=5">5</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=6">6</a>
        <a href="https://www.cnblogs.com/tr1ple/default.html?page=7">7</a>
    
    
    <a href="https://www.cnblogs.com/tr1ple/default.html?page=3">下一页</a>
</div>
</div>





	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 tr1ple
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <div id="cnzzProtocol"  style="display: none;">
    <span class="id_cnzz_stat_icon" id='cnzz_stat_icon_1278632453'></span>
    <script src='https://s19.cnzz.com/z_stat.php?id=1278632453&online=1&show=line' type='text/javascript'></script>
</div>
    </div>
</body>
</html>