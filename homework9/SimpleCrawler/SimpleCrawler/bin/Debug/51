<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta property="og:description" content="前言 接上文 &amp;quot;初探CI，Github调戏Action手记——自动构建并发布&amp;quot; 在学习了Action的基本操作之后 接着我们来探索Action其他可能的功能 众所周知 只有用得到的" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>再探CI，Github调戏Action手记——自动构建并发布到另一仓库 - 吾之初心,永世不忘 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=BKtyzabbeYJEVOaELkxmRjHbp7LT-v37GzrU5S24bJk" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/ixysy/custom.css?v=YpOWBPdkg&#x2B;gCgOi1lfrjGNAMfIA=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/ixysy/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/ixysy/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/ixysy/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=wKnarAbt-YO5waLYR80IqCLKpzPpF-s-32JKmKCtJxg"></script>
    <script>
        var currentBlogId = 202651;
        var currentBlogApp = 'ixysy';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleMemory';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/ixysy/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/ixysy/">耕田日记</a>
</h1>
<h2>
种下代码的种子将收获什么？
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/ixysy/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%90%BE%E4%B9%8B%E5%88%9D%E5%BF%83%2C%E6%B0%B8%E4%B8%96%E4%B8%8D%E5%BF%98">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/ixysy/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
32&nbsp; </span>
<span id="stats_article_count">文章 - 
1&nbsp; </span>
<span id="stats-comment_count">评论 - 
49</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/ixysy/p/12720134.html">再探CI，Github调戏Action手记——自动构建并发布到另一仓库</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h1 id="前言">前言</h1>
<p>接上文<a href="https://www.wandhi.com/post-1070.html" title="初探CI，Github调戏Action手记——自动构建并发布">初探CI，Github调戏Action手记——自动构建并发布</a></p>
<p>在学习了Action的基本操作之后</p>
<p>接着我们来探索Action其他可能的功能</p>
<p>众所周知 只有用得到的技术学习的才会最快</p>
<p>我也是如此</p>
<p>在完成了当前仓库不同分支的构建发布后，我又有了新的需求 <strong>自动构建后发布到不同的仓库</strong></p>
<h1 id="正文">正文</h1>
<p>我们直接新建一个yml发布文件</p>
<p>在系统给我们生成的文件中我们可以看到基础语法的介绍</p>
<p>这里我结合自己的理解标注一下</p>
<p>在进行解读之前我们先了解一下基本概念</p>
<h2 id="基本术语">基本术语</h2>
<ul>
<li>workflow (工作流程)</li>
<li>job (任务) 一个workflow可以由多个不同的job组成</li>
<li>step (步骤) 每个job可以由多个step来组成</li>
<li>action(动作) 每个step又可以由多个action来组成</li>
</ul>
<h2 id="action市场">Action市场</h2>
<p>由于持续集成大家的需求大部分可能都是相同的操作</p>
<p>所以github建立了一个Action市场</p>
<p>使得每个人编写的Action脚本都可以被其他人来引用</p>
<p>这就使得当我这种彩笔小白想要使用这些功能的时候而不用写出很复杂的脚本</p>
<p>而这整个持续集成的过程也就成为了不同的Action相组合的产物</p>
<p>使用方法也很简单，只需要使用<code>uses</code>关键字直接引用别人的库即可</p>
<p><code>uses userName/repoName</code></p>
<h2 id="结合模板">结合模板</h2>
<p>然后我们来结合系统生成的基础模板来进行基本的解读</p>
<pre><code class="language-yaml"># This is a basic workflow to help you get started with Actions

name: CI  # 构建流程的名称


on: #触发该流程的方式
  push:
    branches: [ master ]  #触犯该流程的分支
  pull_request:
    branches: [ master ]

jobs:
  # 该任务当前仅包含了一个任务  名称是build
  build:    
    runs-on: ubuntu-latest #任务锁运行的工作环境

    # 该任务所包含的步骤
    steps:
    # 步骤所依赖的操作库 这里引用了官方发布的git操作库 目的是拉取当前库的代码
    - uses: actions/checkout@v2

    # 这里是一个单行命令的模板
    - name: Run a one-line script
      run: echo Hello, world!

    # 这里是一个多行命令的模板
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.

</code></pre>
<h2 id="使用已有的库进行持续集成当前库构建发布到另外的库">使用已有的库进行持续集成(当前库构建发布到另外的库)</h2>
<p>到这里我们就可以开始进行自己的Action的组装了</p>
<p>首先我们先找一个有发布到其他Git库功能的Action</p>
<p>我们可以在github的市场搜索自己需要的Action</p>
<p><img src="https://i.loli.net/2020/04/17/MFcPRLTway742pE.png" alt="MFcPRLTway742pE"></p>
<p>这里我使用的是<code>s0/git-publish-subdir-action@master</code></p>
<p>点开这个库的主页我们可以在下方看到该库的使用说明</p>
<p>这里就不在赘述了</p>
<pre><code class="language-yaml">name: AutoBuild

on:
  push:
    branches: [ OneKeyVip-master ]
  pull_request:
    branches: [ OneKeyVip-master ]
jobs:
  
  build:
    name: build
    runs-on: ubuntu-latest    
    steps:    
    - uses: actions/checkout@v2    
    - name: npm install
      run: |
        npm install
        npm ci
    - name: npm build
      run: |
       npm run build
       cp README.MD ./publish/README.MD
       cp CHANGELOG ./publish/CHANGELOG

    - name: publish
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: 目标库
        BRANCH: 目标分支
        FOLDER: 要发布的内容所在的文件夹        
        SSH_PRIVATE_KEY: ${{ secrets.publish }}
</code></pre>
<h2 id="结语">结语</h2>
<p>至此我们就完成了从当前库发布到其他的库持续集成的脚本的编写</p>
<p>剩下的我们就可以不再关心代码的生成与发布了</p>
<p>可以愉快的码代码了</p>
<p><img src="https://i.loli.net/2020/04/17/GvEprR2w75OY4sX.png" alt="GvEprR2w75OY4sX"></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-17 15:10</span>&nbsp;
<a href="https://www.cnblogs.com/ixysy/">吾之初心,永世不忘</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12720134" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12720134);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 202651, cb_blogApp = 'ixysy', cb_blogUserGuid = '2787a84a-4f21-e411-8d02-90b11c0b17d6';
    var cb_entryId = 12720134, cb_entryCreatedDate = '2020-04-17 15:10', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 吾之初心,永世不忘
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>