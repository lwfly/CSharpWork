<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="spring ioc原理实例示例 spring helloworld程序实例" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>spring原理案例-基本项目搭建 03 创建工程运行测试 spring ioc原理实例示例 - noteless - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=BKtyzabbeYJEVOaELkxmRjHbp7LT-v37GzrU5S24bJk" />
    <link id="MainCss" rel="stylesheet" href="/skins/buildtowin/bundle-buildtowin.min.css?v=lp23bZd4RUCf9TGsihJRLSq5M_182P4N8YRMn1A2CWo" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/noteless/custom.css?v=fnk17ixpiOajP7an/OE6hUwN1aI=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/buildtowin/bundle-buildtowin-mobile.min.css?v=ADiCwO2hOTdd5yYidcx7eob7ix2VJI4o_TXjEycTHjs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/noteless/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/noteless/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/noteless/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=wKnarAbt-YO5waLYR80IqCLKpzPpF-s-32JKmKCtJxg"></script>
    <script>
        var currentBlogId = 268100;
        var currentBlogApp = 'noteless';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'BuildtoWin';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <link rel="stylesheet" href="https://blog-static.cnblogs.com/files/noteless/cnblogs.css" type="text/css" />

<!--
<link rel="stylesheet" href="https://blog-static.cnblogs.com/files/noteless/monokai-sublime.css">
-->

<script src="https://blog-static.cnblogs.com/files/noteless/highlight.pack.js" defer></script>






<div class="main-top">

  <a class="avatar" href="https://www.cnblogs.com/noteless">
    <img src="//files.cnblogs.com/files/noteless/cnblogspic2.gif" alt="noteless 头像">
</a>
<div class="title">
    <a class="name" href="https://www.cnblogs.com/noteless/">noteless</a>
  </div>
<div class="info">

  </div>
</div>



<a href="#"><div id="toTop" style="zoom:0;display:none"></div></a>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/noteless/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/noteless/">noteless</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/noteless/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/noteless">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/noteless/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
212&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
89</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/noteless/p/5213267.html">spring原理案例-基本项目搭建 03 创建工程运行测试 spring ioc原理实例示例</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        spring ioc原理实例示例 spring helloworld程序实例
    </div>
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>下面开始项目的搭建</p>
<p>使用 Java EE - Eclipse 新建一 Dynamic Web Project</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154927271-1469768822.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="7d8decd6-cbab-4618-8fd6-148550868db6" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154927896-525241910.jpg" alt="7d8decd6-cbab-4618-8fd6-148550868db6" width="771" height="489" border="0" /></a></p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154928724-745040349.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="b1e45657-a918-49f9-8591-ef4c55fec14e" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154929271-363914030.jpg" alt="b1e45657-a918-49f9-8591-ef4c55fec14e" width="664" height="796" border="0" /></a></p>
<p>Target Runtime 选 Apache Tomcat 7.0(不要选 Apache Tomcat 6.0，7 以后才支持 Servlet 3.0)。</p>
<p>点击 Next &gt; 按钮。</p>
<p>默认的 Source folders 配置如下：</p>
<p>ps:可以根据需求自己编辑比如&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>删除默认的，增加以下四个并修改默认的输出目录为 WebContent\WEB-INF\classes:</p>
<p>&nbsp;&nbsp;&nbsp; src/main/java</p>
<p>&nbsp;&nbsp;&nbsp; src/main/resources</p>
<p>&nbsp;&nbsp;&nbsp; src/test/java</p>
<p>&nbsp;&nbsp;&nbsp; src/test/resources</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154929755-1221803870.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="c3c3c5ac-223b-40a6-850c-07947d50fe5c" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154930115-538790289.jpg" alt="c3c3c5ac-223b-40a6-850c-07947d50fe5c" width="667" height="803" border="0" /></a></p>
<p>点击Next</p>
<p>Configure web module settings 对话框勾选 Generate web.xml deployment descriptor 选项：</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154930990-928396754.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="7890f292-047e-451e-8970-fb3e7eedf28d" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154931302-854714377.jpg" alt="7890f292-047e-451e-8970-fb3e7eedf28d" width="664" height="801" border="0" /></a></p>
<p>然后点击finish完成</p>
<p>&nbsp;</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154931615-1654815919.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="079e6ac5-9993-4fbc-9fde-ee4f7aef6b6f" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154931911-1383977256.jpg" alt="079e6ac5-9993-4fbc-9fde-ee4f7aef6b6f" width="261" height="132" border="0" /></a></p>
<p>这几个包或许是需要最少的包</p>
<p>-------------------------------------------------------</p>
<p>3.下面开始部署</p>
<p>把所需要的jar包ctrl c&nbsp;&nbsp;&nbsp; ctrl v粘贴到lib目录</p>
<p>然后&nbsp; 添加进来</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154932318-929425094.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="0d26f02e-d14a-4062-a154-da391b62bff4" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154932990-1468675470.jpg" alt="0d26f02e-d14a-4062-a154-da391b62bff4" width="799" height="666" border="0" /></a></p>
<p>添加完的效果</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154933599-1794222469.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="0aabf9f2-557e-4de0-bf7b-34bbb4023c55" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154934271-2058293899.jpg" alt="0aabf9f2-557e-4de0-bf7b-34bbb4023c55" width="592" height="620" border="0" /></a></p>
<p>然后新建两个类</p>
<p>&nbsp;&nbsp;&nbsp; 一个实体类-----------------HelloWorldSpringBean</p>
<p>&nbsp;&nbsp;&nbsp; 一个测试类(包含main函数)----------HelloWorldSpring</p>
<p>新建配置文件 -----------helloWorldSpring.xml</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154934833-42594484.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;" title="ead0ecdc-c4b4-4c9e-b9fc-4cf4569f04d3" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154935177-386301574.jpg" alt="ead0ecdc-c4b4-4c9e-b9fc-4cf4569f04d3" width="373" height="303" border="0" /></a></p>
<p>具体如下:</p>
<p>HelloWorldSpringBean</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> chapter2.HelloWorldSpring;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HelloWorldSpringBean {

</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String hello;

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getHello(){

</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> hello;

    }

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setHello(String hello){

</span><span style="color: #0000ff;">this</span>.hello=<span style="color: #000000;">hello;

    }

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> show(){

        System.out.println(</span>"--message--"+<span style="color: #000000;">getHello());

    }

}</span></pre>
</div>
<p>一个属性,</p>
<p>以及对应的get&nbsp;&nbsp; set方法</p>
<p>还有执行方法</p>
<p>HelloWorldSpring</p>
<p>&nbsp;</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> chapter2.HelloWorldSpring;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.context.ApplicationContext;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.context.support.FileSystemXmlApplicationContext;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HelloWorldSpring {

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {

</span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
<span style="color: #000000;">
        ApplicationContext ctx </span>= <span style="color: #0000ff;">new</span> FileSystemXmlApplicationContext("src/helloWorldSpring.xml"<span style="color: #000000;">);

        HelloWorldSpringBean helloWorldSpringBean </span>= (HelloWorldSpringBean)ctx.getBean("myHelloWorld"<span style="color: #000000;">);

        helloWorldSpringBean.show();

    }

}</span></pre>
</div>
<p>helloWorldSpring.xml</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd"</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="myHelloWorld"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="chapter2.HelloWorldSpring"</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hello"</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>hello World spring!<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>HelloWorldSpring直接run as application 执行,报错</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre>Exception in thread "main" org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 2 in XML document from file [D:\ProgramData\Workspaces\eclipse\chapter2\src\helloWorldSpring.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 6; 不允许有匹配 "[xX][mM][lL]" 的处理指令目标。</pre>
</div>
<p><strong>配置文件开头不能有其他内容空格或者空行等,如果有的话就会报错</strong></p>
<p>XML没有以&lt;?xml version="1.0" encoding="UTF-8"?&gt; 开头，也就是说第一个字符必须是&lt;?xml......</p>
<p>解决方法：</p>
<p><strong> 规范的XML格式、</strong></p>
<p><strong> &lt;?xml version="1.0" encoding="UTF-8"?&gt;&nbsp; 必须是XML文件的第一个元素且前面不能空格。</strong></p>
<p>&nbsp;</p>
<p>修改后继续报错,错误内容为</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #000000;">十一月 10, 2015 5:50:10 下午 org.springframework.context.support.FileSystemXmlApplicationContext refresh

警告: Exception encountered during context initialization - cancelling refresh attempt

org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [chapter2.HelloWorldSpring] for bean with name 'myHelloWorld' defined in file [D:\ProgramData\Workspaces\eclipse\chapter2\src\helloWorldSpring.xml]; nested exception is java.lang.ClassNotFoundException: chapter2.HelloWorldSpring

    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1351)

    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:628)

    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:597)

    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1444)

    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:974)

    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:752)

    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)

    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)

    at org.springframework.context.support.FileSystemXmlApplicationContext.</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">(FileSystemXmlApplicationContext.java:140)

    at org.springframework.context.support.FileSystemXmlApplicationContext.</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">(FileSystemXmlApplicationContext.java:84)

    at chapter2.HelloWorldSpring.HelloWorldSpring.main(HelloWorldSpring.java:12)

Caused by: java.lang.ClassNotFoundException: chapter2.HelloWorldSpring</span></pre>
</div>
<p>类找不到,发现是配置文件中的class中写错了,没有写好类名</p>
<p>class="chapter2.HelloWorldSpring.HelloWorldSpringBean"&gt;修改为这个重新运行,可以打开</p>
<p><a href="http://images2015.cnblogs.com/blog/897393/201602/897393-20160224154935599-1665652585.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="2c77a4c7-7071-41db-b38f-a7eb908b1bb1" src="https://images2015.cnblogs.com/blog/897393/201602/897393-20160224154936036-1732558469.jpg" alt="2c77a4c7-7071-41db-b38f-a7eb908b1bb1" width="1514" height="255" border="0" /></a></p>
<p>最终的代码为:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> chapter2.HelloWorldSpring;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HelloWorldSpringBean {

</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String hello;

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getHello(){

</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> hello;

    }

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setHello(String hello){

</span><span style="color: #0000ff;">this</span>.hello=<span style="color: #000000;">hello;

    }

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> show(){

        System.out.println(</span>"--message--"+<span style="color: #000000;">getHello());

    }

}

</span>---------------------------------------------------------

<span style="color: #0000ff;">package</span><span style="color: #000000;"> chapter2.HelloWorldSpring;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.context.ApplicationContext;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.context.support.FileSystemXmlApplicationContext;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> chapter2.HelloWorldSpring.HelloWorldSpringBean;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HelloWorldSpring {

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {

</span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
<span style="color: #000000;">
        ApplicationContext ctx </span>= <span style="color: #0000ff;">new</span> FileSystemXmlApplicationContext("src/helloWorldSpring.xml"<span style="color: #000000;">);

        HelloWorldSpringBean helloWorldSpringBean </span>= (HelloWorldSpringBean)ctx.getBean("myHelloWorld"<span style="color: #000000;">);

        helloWorldSpringBean.show();

    }

}

</span>-----------------------------------------------------------------------------------

&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd"&gt;

&lt;beans&gt;

&lt;bean id="myHelloWorld" <span style="color: #0000ff;">class</span>="chapter2.HelloWorldSpring.HelloWorldSpringBean"&gt;

&lt;property name="hello"&gt;

&lt;value&gt;hello World spring!&lt;/value&gt;

&lt;/property&gt;

&lt;/bean&gt;

&lt;/beans&gt;
　　　　　　</pre>
</div>
<p>&nbsp;</p>
<p>spring原理 实践解析-简单的helloworld</p>
<p><a href="http://www.cnblogs.com/noteless/p/5213217.html" target="_blank">spring原理案例-基本项目搭建 01 spring framework 下载 官网下载spring jar包</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213208.html" target="_blank">spring原理案例-基本项目搭建 02 spring jar包详解 spring jar包的用途</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213267.html" target="_blank">spring原理案例-基本项目搭建 03 创建工程运行测试 spring ioc原理实例示例</a></p>
<p>springmvc整合mybatis完整项目示例</p>
<p><a href="http://www.cnblogs.com/noteless/p/5213447.html" target="_blank">springmvc 项目完整示例01 需求与数据库表设计 简单的springmvc应用实例 web项目</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213468.html" target="_blank">springmvc 项目完整示例02 项目创建-eclipse创建动态web项目 配置文件 junit单元测试</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213476.html" target="_blank">springmvc 项目完整示例03 小结</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213485.html" target="_blank">springmvc 项目完整示例04 整合mybatis mybatis所需要的jar包 mybatis配置文件 sql语句 mybatis应用</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213490.html" target="_blank">springmvc 项目完整示例05&nbsp; 日志 --log4j整合 配置 log4j属性设置 log4j 配置文件 log4j应用</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213502.html" target="_blank">springmvc 项目完整示例06 日志&ndash;log4j 参数详细解析 log4j如何配置</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213511.html" target="_blank">springmvc 项目完整示例07 设置配置整合springmvc springmvc所需jar包springmvc web.xml文件配置</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5213520.html" target="_blank">springmvc 项目完整示例08 前台页面以及知识点总结</a></p>
<p>maven项目整合springmvc整合mybatis</p>
<p><a href="http://www.cnblogs.com/noteless/p/5213075.html" target="_blank">eclipse 创建maven 项目 动态web工程完整示例</a></p>
<p><a href="http://www.cnblogs.com/noteless/p/5228083.html" target="_blank">eclipse 创建maven 项目 动态web工程完整示例 maven 整合springmvc整合</a></p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2016-02-24 15:50</span>&nbsp;
<a href="https://www.cnblogs.com/noteless/">noteless</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=5213267" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(5213267);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 268100, cb_blogApp = 'noteless', cb_blogUserGuid = '2f3ff2be-bdda-e511-9fc1-ac853d9f53cc';
    var cb_entryId = 5213267, cb_entryCreatedDate = '2016-02-24 15:50', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 noteless
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script>
/*
$(document).ready(function() {
  $('pre').each(function(i, e) {hljs.highlightBlock(e)});
});
*/
</script>





<script>




//初始化加载函数
$(function(){
    // hideIndexArticle();
    appendNavigator();

    addOriginURL();

addSupport();
hideToTop();


})


//隐藏首页除置顶外的其他所有文章列表
function hideIndexArticle(){
    var windowURL = window.location.href;
    console.log(windowURL )
    if(windowURL && windowURL.indexOf('www.cnblogs.com/noteless')>0 && windowURL.indexOf('html')<0){
        //$('#mainContent .day:not(:first)').css('display','none');
    }
}

//增导航条上增加 目录索引按钮
function appendNavigator(){
    var _html='<li>'
        +'<a id="blog_nav_admin" class="menu" rel="nofollow" href="https://www.cnblogs.com/noteless/p/9400742.html">'
        +'目录索引'
        +'</a>'
        +'</li>';

    $('#navList').append(_html);
}

function appendMenuItem(tagName,id,content){
    console.log(tagName+" "+tagName.substring(1));
    var paddingLeft = tagName.substring(1) * 30; //添加标题缩进
    $('#menu_nav_ol').append('<li class="' + id +'" style="padding-left: '+ paddingLeft +'px;"><b>' + content + '</b></li>');
}


//添加支持一下，请求关注
function addSupport(){

var zhichiHml = '<p>'
+'<span>'
+'<img src="https://files-cdn.cnblogs.com/files/noteless/zhichiyixaa.bmp" alt="">'
+'</span>'
+'</p>';
$('#cnblogs_post_body').append(zhichiHml );

}

//每篇文章增加原文地址
function addOriginURL(){

    //文章增加原文地址
    var originURL='<div>'
        +'原文地址:'
        +'<a href="'
        +window.location.href
        +'" target="_blank">'
        +$('.postTitle a').html()
        +'</a>'
        +'</div>';
		
	originURL+='<img src="https://blog-static.cnblogs.com/files/noteless/%E4%BA%8C%E7%BB%B4%E7%A0%812.gif"></img>';
		
		
    if($("#cnblogs_post_body h3:first").length>0){
        $("#cnblogs_post_body h3:first").before(originURL);
    }else{
        $('#cnblogs_post_body').prepend(originURL);
    }


}

//如果是pc展示返回顶部
function hideToTop(){

	if(isPC()){
		$('#toTop').show();
	}
}


//判断手机还是pc
function isPC() {
   var userAgentInfo = navigator.userAgent;
   var Agents = ["Android", "iPhone",
      "SymbianOS", "Windows Phone",
      "iPad", "iPod"];
   var flag = true;
   for (var v = 0; v < Agents.length; v++) {
      if (userAgentInfo.indexOf(Agents[v]) > 0) {
         flag = false;
         break;
      }
   }
   return flag;
}



//根据标题生成左侧边栏的目录树
// 生成目录开始

$(function () {

	//如果是手机隐藏目录
	if(isPC()){

		//内容拼接
		$('body').append(
			'<div id="article-outline">'
			+'<div style="height:15px;">'
			+'<button type="button" class="close" data-dismiss="modal" aria-hidden="true">'
			+'X'
			+'</button>'
			+'</div>'
			+'</div>'
			+'<style>'
			+'#article-outline{'
			+'display:none;'
			+'min-width:140p;'
			+'max-width: 230px;'
			//+'max-height: 350px;'
			+'position:absolute;'
			+'float: left;'
			+'top:150px;'
			+'left:-999px;'
			+'border:1px solid #ccc;'
			+'box-shadow:5px 5px 2px #ccc;'
			+'padding: 5px 10px;'
			+'background-color: #fff;'
			+'overflow-y: auto;'
			+'scroll-x: auto;'
			+'}'

			+'#article-outline ul{'
			+'margin:5px 0 5px 0;'
			+'padding-left:30px;'
			+'font-size:12px;'
			+'border-left:1px dotted #ccc;'
			+'}'

			+'#article-outline ul:first-child{'
			+'padding-left:15px;'
			+'border:none;'
			+'}'

			+'#article-outline li{'
			+'list-style-type:decimal;'
			+'margin:3px 0;'
			+'}'

			+'#article-outline a{'
			+'color:#00C1E4;'
			+'}'
			+'</style>'
		)
		
		

		
		
		//取得新添加的目录元素
		var jOutline = $('#article-outline');

		//获取文章内容
		//var jContent = $('article .content');
		var jContent = $('div#topics');

		//计算高度
		var jContentHeight = jContent.height();

		//关闭按钮
		jOutline.find('.close').on('click', function () {
			jOutline.hide();
		})

		updateOutline();

		var top = jOutline.offset().top;
		scrollOutline();
		$(window).on('scroll', scrollOutline);

		function scrollOutline() {
			var scrollTop = $(document).scrollTop();
			var maxTop = jContent.offset().top + jContent.height() - jOutline.height();
			//设置行内样式
			if (scrollTop >= top && scrollTop <= maxTop) {
				jOutline.css({'position': 'fixed', 'top': 0});
			}
			else if (scrollTop < top) {
				/*
							jOutline.css({'position': 'absolute','float':'left', 'top': '150px'});
				*/
				jOutline.css({'position': 'absolute', 'top': '200px'});
			}
			else {
				/*
							jOutline.css({'position': 'absolute','float':'left', 'top': maxTop + 'px'});
				*/
				jOutline.css({'position': 'absolute', 'top': maxTop + 'px'});
			}

		}

		function updateOutline() {
			//设置哪些级别的目录
			// var arrAllHeader = jContent.find("h1,h2,h3,h4,h5,h6");
			var arrAllHeader = jContent.find("h2,h3,h4,h5,h6");
			var arrOutline = ['<ul>'];
			var header, headerText;
			var id = 0;
			var level = 0,
				lastLevel = 1;
			var levelCount = 0;
			for (var i = 0, c = arrAllHeader.length; i < c; i++) {
				header = arrAllHeader[i];
				headerText = $(header).text();

				header.setAttribute('id', id);

				level = header.tagName.match(/^h(\d)$/i)[1];
				levelCount = level - lastLevel;

				if (levelCount > 0) {
					for (var j = 0; j < levelCount; j++) {
						arrOutline.push('<ul>');
					}
				} else if (levelCount < 0) {
					levelCount *= -1;
					for (var j = 0; j < levelCount; j++) {
						arrOutline.push('</ul>');
					}
				}
				;
				arrOutline.push('<li>');
				arrOutline.push('<a href="#' + id + '">' + headerText + '</a>');
				arrOutline.push('</li>');
				lastLevel = level;
				id++;
			}
			arrOutline.push('</ul>')
			if (arrOutline.length > 2) {
				jOutline.append(arrOutline.join(''));
				jOutline.find('ul').each(function (i, n) {
					var jThis = $(this);
					if (jThis.children('li').length === 0) {
						jThis.replaceWith(jThis.children());
					}
				});
				showOutline();
			}
			else {
				hideOutline();
			}
		}

		function showOutline() {
			var offset = jContent.offset();

			//目录左侧偏移量
			/*        jOutline.css({
						left: offset.left + jContent.width() + 10 + 'px',
					}).show();*/
			jOutline.css({
				left:8 + 'px',
			}).show();
		}

		function hideOutline() {
			jOutline.hide();
		}
	
	
	}




    
});

//生成目录结束




</script>
    </div>
</body>
</html>